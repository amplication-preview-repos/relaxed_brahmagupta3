/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ErrorModel as PrismaErrorModel } from "@prisma/client";

export class ErrorModelServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ErrorModelCountArgs, "select">
  ): Promise<number> {
    return this.prisma.errorModel.count(args);
  }

  async errorModels(
    args: Prisma.ErrorModelFindManyArgs
  ): Promise<PrismaErrorModel[]> {
    return this.prisma.errorModel.findMany(args);
  }
  async errorModel(
    args: Prisma.ErrorModelFindUniqueArgs
  ): Promise<PrismaErrorModel | null> {
    return this.prisma.errorModel.findUnique(args);
  }
  async createErrorModel(
    args: Prisma.ErrorModelCreateArgs
  ): Promise<PrismaErrorModel> {
    return this.prisma.errorModel.create(args);
  }
  async updateErrorModel(
    args: Prisma.ErrorModelUpdateArgs
  ): Promise<PrismaErrorModel> {
    return this.prisma.errorModel.update(args);
  }
  async deleteErrorModel(
    args: Prisma.ErrorModelDeleteArgs
  ): Promise<PrismaErrorModel> {
    return this.prisma.errorModel.delete(args);
  }
}
